version: '3.4'

services:    
      
  mysql:
    image: mysql/mysql-server:5.7
    volumes:
      - mysql_volume:/var/lib/mysql
    ports:
      - "3306:3306"
    environment: 
      MYSQL_USER: user
      MYSQL_DATABASE: CaseDB
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: 1234

  rediscache:
    image: redis
    restart: on-failure
    container_name: rediscache
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data

  rabbitmq:
    image: rabbitmq:3-management
    restart: on-failure
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq_volume:/var/lib/rabbitmq
  
  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: src/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:MySQLConnection=Server=mysql;Database=CaseDB;user=user;Password=1234;port=3306"
      - "ConnectionStrings:RabbitMQ=rabbitmq"
      - "CacheSettings:RedisURL=rediscache"
      - "CacheSettings:UseDistributedCache=true"
      - "CacheSettings:PreferRedis=true"
    ports:
       - "5071:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - mysql
      - rabbitmq
      - rediscache

  mailsenderbackgroundservice:
    image: mailsenderbackgroundservice
    restart: on-failure
    build:
      context: .
      dockerfile: MailSenderBackgroundService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:RabbitMQ=rabbitmq"

volumes:
  redis_volume:
  rabbitmq_volume:
  mysql_volume: